{#- Main definitions of the traits #}

pub mod {{ message.rust_nested_module_ident() }}_fields {
    mod puroro_root {
        pub use super::super::super::puroro_root::*;
    }

    // Field getters
    {%- for field in message.fields() %}
    pub trait Field{{ field.number() }} {

        {%- match field.field_type().unwrap().maybe_enum_or_message().unwrap() %}
        {%- when wrappers::MaybeEnumOrMessage::Message with (m) %}
        type Field{{ field.number() }}MessageType: ::puroro::Message + {{ m.rust_absolute_trait_path() }};
        {%- else %}
        {%- endmatch %}

        {%- if field.has_scalar_getter() %}
        fn {{ field.rust_ident() }}<'this>(&'this self) -> {{ field.trait_scalar_getter_type().unwrap() }};
        {%- endif %}
        {%- if field.has_scalar_optional_getter() %}
        fn {{ field.rust_ident() }}<'this>(&'this self) -> ::std::option::Option<{{ field.trait_scalar_getter_type().unwrap() }}>;
        {%- endif %}
    }
    {%- endfor %}
} // mod {{ message.rust_nested_module_ident() }}_fields

pub trait {{ message.rust_ident() }}Trait:
    {%- for field in message.fields() %}
    self::{{ message.rust_nested_module_ident() }}_fields::Field{{ field.number() }} +
    {%- endfor %}
{
}
