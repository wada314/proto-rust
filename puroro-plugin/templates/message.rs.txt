
#[allow(unused)]
pub struct {{ self.message.rust_ident() }}<ImplTag> 
where ImplTag:
    super::super::puroro_traits::{{ self.message.rust_ident() }}TraitAggregatedTypeGen +
    ::puroro::StructInternalTypeGen,
{
    {%- for field in self.message.fields() %}
    {{ self.visibility }}{{ field.rust_ident() }}: <ImplTag as ::puroro::FieldTypeGen<{{ field.label_and_type_tag().unwrap() }}>>::Type,
    {%- endfor %}
    puroro_internal: <ImplTag as ::puroro::StructInternalTypeGen>::Type,
}

impl<ImplTag> ::puroro::Message for {{ self.message.rust_ident() }}<ImplTag>
where ImplTag:
    super::super::puroro_traits::{{ self.message.rust_ident() }}TraitAggregatedTypeGen +
    ::puroro::StructInternalTypeGen,
{
    type ImplTypeTag = ImplTag;
}

impl<ImplTag> ::puroro::DeserFromBytesIter for {{ self.message.rust_ident() }}<ImplTag>
where ImplTag:
    super::super::puroro_traits::{{ self.message.rust_ident() }}TraitAggregatedDeserFromIter +
    ::puroro::StructInternalTypeGen,
{
    fn deser<I>(&mut self, iter: I) -> ::puroro::Result<()>
    where
        I: ::std::iter::Iterator<Item = ::std::io::Result<u8>>
    {
        todo!()
    }
    
    fn deser_field<I>(
        &mut self,
        field_number: i32,
        data: ::puroro::FieldData<&mut ::puroro::de::from_iter::ScopedIter<I>>,
    ) -> ::puroro::Result<()>
    where
        I: ::std::iter::Iterator<Item = ::std::io::Result<u8>> 
    {
        match field_number {
            {%- for field in self.message.fields() %}
            {{ field.number() }} => <ImplTag as ::puroro::DeserFieldFromBytesIter<
                {{ field.label_and_type_tag().unwrap() }}>
            >::deser_from_scoped_bytes_iter(&mut self.{{ field.rust_ident() }}, data),
            {%- endfor %}

            _ => ::std::result::Result::Err(::puroro::ErrorKind::UnknownFieldNumber)?,
        }
    }
}

