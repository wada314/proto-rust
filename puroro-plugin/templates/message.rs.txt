
#[allow(unused)]
pub struct {{ self.message.rust_ident() }}<ImplTag> 
where ImplTag:
    super::super::puroro_traits::{{ self.message.rust_ident() }}TraitAggregatedTypeGen +
    ::puroro::StructInternalTypeGen,
{
    {% if self.is_public -%}

    {% for field in self.message.fields() -%}
    /// Comment something about this field!
    pub {{ field.rust_ident() }}: <ImplTag as ::puroro::FieldTypeGen<{{ field.label_and_type_tag().unwrap() }}>>::Type,
    {% endfor -%}
    puroro_internal: <ImplTag as ::puroro::StructInternalTypeGen>::Type,

    {%- else -%}

    body: super::public::{{ self.message.rust_ident() }}<ImplTag>,

    {%- endif %}
}

impl<ImplTag> ::puroro::Message for {{ self.message.rust_ident() }}<ImplTag>
where ImplTag:
    super::super::puroro_traits::{{ self.message.rust_ident() }}TraitAggregatedTypeGen +
    ::puroro::StructInternalTypeGen,
{
    type ImplTypeTag = ImplTag;
    fn new_with_internal_data(
        internal_data: <Self::ImplTypeTag as ::puroro::StructInternalTypeGen>::Type,
    ) -> Self {
        Self {
            {% if self.is_public -%}

            {%- for field in self.message.fields() %}
            {{ field.rust_ident() }}: <ImplTag as ::puroro::FieldTypeGen<{{ field.label_and_type_tag().unwrap() }}>>::default(&internal_data),
            {%- endfor %}
            puroro_internal: internal_data,

            {%- else -%}

            body: ::puroro::Message::new_with_internal_data(internal_data),
            
            {%- endif %}
        }
    }
}

impl<ImplTag> ::puroro::DeserFromBytesIter for {{ self.message.rust_ident() }}<ImplTag>
where ImplTag:
    super::super::puroro_traits::{{ self.message.rust_ident() }}TraitAggregatedDeserFromIter +
    ::puroro::StructInternalTypeGen,
{
    fn deser<I>(&mut self, iter: I) -> ::puroro::Result<()>
    where
        I: ::std::iter::Iterator<Item = ::std::io::Result<u8>>
    {
        {% if self.is_public -%}
        ::puroro_internal::de::from_iter::deser_from_iter(self, iter)
        {%- else -%}
        ::puroro::DeserFromBytesIter::deser(&mut self.body, iter)
        {%- endif %}
    }
}

impl<ImplTag> ::puroro_internal::de::DeserFromBytesIterInternal for {{ self.message.rust_ident() }}<ImplTag>
where ImplTag:
    super::super::puroro_traits::{{ self.message.rust_ident() }}TraitAggregatedDeserFromIter +
    ::puroro::StructInternalTypeGen,
{    
    fn deser_field<I>(
        &mut self,
        field_number: i32,
        data: ::puroro::types::FieldData<&mut ::puroro_internal::ScopedIter<I>>,
    ) -> ::puroro::Result<()>
    where
        I: ::std::iter::Iterator<Item = ::std::io::Result<u8>> 
    {
        {% if self.is_public -%}

        match field_number {
            {%- for field in self.message.fields() %}
            {{ field.number() }} => <ImplTag as ::puroro_internal::de::DeserFieldFromBytesIter<
                {{ field.label_and_type_tag().unwrap() }}>
            >::deser_from_scoped_bytes_iter(&mut self.{{ field.rust_ident() }}, data, &self.puroro_internal),
            {%- endfor %}

            _ => ::std::result::Result::Err(::puroro::ErrorKind::UnknownFieldNumber)?,
        }

        {%- else -%}

        ::puroro_internal::de::DeserFromBytesIterInternal::deser_field(&mut self.body, field_number, data)

        {%- endif %}
    }
}

impl<ImplTag> ::std::default::Default for {{ self.message.rust_ident() }}<ImplTag>
where 
    ImplTag: super::super::puroro_traits::{{ self.message.rust_ident() }}TraitAggregatedDeserFromIter +
        ::puroro::StructInternalTypeGen,
    <ImplTag as ::puroro::StructInternalTypeGen>::Type: ::std::default::Default,
{
    fn default() -> Self {
        <Self as ::puroro::Message>::new_with_internal_data(::std::default::Default::default())
    }
}

