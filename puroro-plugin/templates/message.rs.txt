
#[allow(unused)]
pub struct {{ self.message.rust_ident() }}<ImplTag> 
where
    ImplTag:
        super::super::puroro_traits::{{ self.message.rust_ident() }}TraitAggregatedTypeGen +
        ::puroro::StructInternalTypeGen,
{
    {%- for field in self.message.fields() %}
    {{ self.visibility }}{{ field.rust_ident() }}: <ImplTag as ::puroro::FieldTypeGen<(::puroro::tags::{{ field.field_label().unwrap().tag_ident() }}, (::puroro::tags::{{ self.message.input_file().unwrap().syntax().tag_ident() }}, ::puroro::tags::{{ field.field_type().unwrap().tag_ident().unwrap() }}))>>::Type,
    {%- endfor %}
    puroro_internal: <ImplTag as ::puroro::StructInternalTypeGen>::Type,
}

impl<ImplTag> ::puroro::Message for {{ self.message.rust_ident() }}<ImplTag>
where
    ImplTag:
        super::super::puroro_traits::{{ self.message.rust_ident() }}TraitAggregatedTypeGen +
        ::puroro::StructInternalTypeGen,
{
    type ImplTypeTag = ImplTag;
    fn apply_mut_to_field_with_number<F>(&mut self, number: i32, mut f: F) -> ::puroro::Result<()>
    where
        F: ::puroro::FunctorForFieldMut<ImplTypeTag = Self::ImplTypeTag> 
    {
        match number {
            {%- for field in self.message.fields() %}
            {{ field.number() }} => f.apply_mut::<{{ field.label_and_type_tag().unwrap() }}>(&mut self.{{ field.rust_ident() }}),
            {%- endfor %}
            _ => Err(::puroro::ErrorKind::UnknownFieldNumber)?,
        }
    }
}
