#[derive(::std::fmt::Debug, ::std::cmp::PartialEq, ::std::clone::Clone)]
pub enum {{ enum_ident }}
{%- if has_reference_field %}
<'msg, T: ?Sized + {{ owner_message_trait_path }}>
{%- else %}
{%- endif %}
{
    {%- for field in fields %}
    {{ field.ident }}({{ field.trait_field_type }}),
    {%- endfor %}
}

{%- if has_reference_field %}
impl<'msg, T> ::std::convert::From<{{ enum_ident }}<'msg, T>> 
for {{ enum_ident }}<'msg, &'_ T>
where
    T: {{ owner_message_trait_path }},
{
    fn from(value: {{ enum_ident }}<'msg, T>) -> Self {
        match value {
            {%- for field in fields %}
            {{ enum_ident }}::{{ field.ident }}(v) => {{ enum_ident }}::{{ field.ident }}(v),
            {%- endfor %}
        }
    }
}
{%- endif %}

{%- if has_reference_field %}
impl<'msg, T> ::std::convert::From<{{ enum_ident }}<'msg, T>> 
for {{ enum_ident }}<'msg, ::std::boxed::Box<T>>
where
    T: {{ owner_message_trait_path }},
{
    fn from(value: {{ enum_ident }}<'msg, T>) -> Self {
        match value {
            {%- for field in fields %}
            {{ enum_ident }}::{{ field.ident }}(v) => {{ enum_ident }}::{{ field.ident }}(v),
            {%- endfor %}
        }
    }
}
{%- endif %}

