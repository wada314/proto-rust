
{%- match f.bumpalo_maybe_field_message_path %}
{%- when Some with (struct_path) %}
type Field{{ f.number }}MessageType<'this> where Self: 'this = &'this {{ struct_path }};
{%- else %}
{%- endmatch %}

{%- if f.is_repeated %}

{%- match f.bumpalo_maybe_borrowed_field_type %}
{%- when Some with (borrowed) %}
type Field{{ f.number }}RepeatedType<'this> where Self: 'this =
    ::puroro::internal::impls::simple::BorrowedIter<
        {{ borrowed }},
        ::std::slice::Iter<'this, {{ f.bumpalo_scalar_field_type }}>>;
{%- else %}
type Field{{ f.number }}RepeatedType<'this> where Self: 'this =
    ::std::iter::Cloned<::std::slice::Iter<'this, {{ f.trait_scalar_getter_type }}>>;
{%- endmatch %}

fn {{ f.ident }}<'this>(&'this self) -> Self::Field{{ f.number }}RepeatedType<'this> {
    {%- match f.bumpalo_maybe_borrowed_field_type %}
    {%- when Some with (borrowed) %}
    ::puroro::internal::impls::simple::BorrowedIter::new(self.{{ f.ident }}.iter())
    {%- else %}
    self.{{ f.ident }}.iter().cloned()
    {%- endmatch %}
}

{%- else %} {#- if f.is_repeated #}

{%- if !f.is_explicit_oneof_field %}
fn {{ f.ident_unesc }}_opt<'this>(&'this self) -> Option<{{ f.trait_scalar_getter_type }}> {
    {%- if f.has_optional_bit %}
    if ::puroro::internal::check_optional_bit(&self._optional_bits, {{ f.optional_bit_index }}) {
        ::std::option::Option::Some(
            {%- if f.is_length_delimited %}
            self.{{ f.ident }}.as_ref()
            {%- else %}
            ::std::clone::Clone::clone(&self.{{ f.ident }})
            {%- endif %}
        )
    } else {
        ::std::option::Option::None
    }
    {%- else %} {#- if f.has_optional_bit #}
    ::std::option::Option::Some(
        {%- if f.is_length_delimited %}
        self.{{ f.ident }}.as_ref()
        {%- else %}
        ::std::clone::Clone::clone(&self.{{ f.ident }})
        {%- endif %})
    {%- endif %} {#- if f.has_optional_bit #}
}
{%- endif %} {#- if !f.is_explicit_oneof_field #}

{%- endif %} {#- if f.is_repeated #}
