pub struct {{ m.builder_ident }}<T>(T);

impl<T> {{ m.builder_ident }}<T>
where
    T: {{ m.trait_ident }}
{
    {%- for field in m.fields %}

    {%- if field.is_length_delimited %}
    pub fn append_{{ field.ident }}<U>(self, value: {{ field.single_field_type_u }})
        -> {{ m.builder_ident }}<(T, {{ m.single_field_ident }}{{ field.number }}<U>)>
    {%- call single_field_bound(field, "U") %}
    {%- else %}
    pub fn append_{{ field.ident }}(self, value: {{ field.single_field_type_u }})
        -> {{ m.builder_ident }}<(T, {{ m.single_field_ident }}{{ field.number }})>
    {%- endif %}
    {
        {{ m.builder_ident }}((self.0, {{ m.single_field_ident }}{{ field.number }} { {{ field.ident }}: value}))
    }

    {%- endfor %}

    pub fn build(self) -> T {
        self.0
    }
}

impl {{ m.builder_ident }}<()>
{
    pub fn new() -> Self { Self(()) }
}