{%- match f.simple_maybe_field_message_path %}
{%- when Some with (struct_path) %}
type Field{{ f.number }}MessageType<'this> = {{ struct_path }};
{%- else %}
{%- endmatch %}

{%- if f.trait_has_scalar_getter %}
fn {{ f.ident }}<'this>(&'this self) -> {{ f.trait_scalar_getter_type }} {
    {%- if f.is_length_delimited %}
    ::std::borrow::Cow::Borrowed(&self.{{ f.ident }})
    {%- else %}
    ::std::clone::Clone::clone(&self.{{ f.ident }})
    {%- endif %}
}
{%- endif %}

{%- if f.trait_has_optional_getter %}
fn {{ f.ident }}<'this>(&'this self) -> ::std::option::Option<{{ f.trait_scalar_getter_type }}> {
    {%- if f.is_length_delimited %}
    {%- if f.is_message %}
    self.{{ f.ident }}.as_ref().map(|boxed| ::std::borrow::Cow::Borrowed(boxed.as_ref()))
    {%- else %}
    self.{{ f.ident }}.as_ref().map(|v| ::std::borrow::Cow::Borrowed(v.as_ref()))
    {%- endif %}
    {%- else %}
    ::std::clone::Clone::clone(&self.{{ f.ident }})
    {%- endif %}
}
{%- endif %}

{%- if f.trait_has_repeated_getter %}
{%- match f.simple_maybe_borrowed_field_type %}
{%- when Some with (borrowed) %}
type Field{{ f.number }}RepeatedType<'this> = ::puroro_internal::impls::simple::VecCowWrapper<'this, {{ borrowed }}>;
{%- else %}
type Field{{ f.number }}RepeatedType<'this> = ::std::iter::Cloned<::std::slice::Iter<'this, {{ f.trait_scalar_getter_type }}>>;
{%- endmatch %}

fn {{ f.ident }}<'this>(&'this self) -> Self::Field{{ f.number }}RepeatedType<'this> {
    {%- match f.simple_maybe_borrowed_field_type %}
    {%- when Some with (borrowed) %}
    ::puroro_internal::impls::simple::VecCowWrapper::new(&self.{{ f.ident }})
    {%- else %}
    self.{{ f.ident }}.iter().cloned()
    {%- endmatch %}
}
{%- endif %}