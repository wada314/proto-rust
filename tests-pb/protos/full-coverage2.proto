syntax = "proto2";
package full_coverage2;

message Msg {
    required int32 i32_required = 1;
    optional int32 i32_optional = 2;
    repeated int32 i32_repeated = 3;
    required float float_required = 11;
    optional float float_optional = 12;
    repeated float float_repeated = 13;
    required bytes bytes_required = 21;
    optional bytes bytes_optional = 22;
    repeated bytes bytes_repeated = 23;
    required string string_required = 31;
    optional string string_optional = 32;
    repeated string string_repeated = 33;
    required Enum enum_required = 41;
    optional Enum enum_optional = 42;
    repeated Enum enum_repeated = 43;

    message Submsg {
        required int32 i32_required = 1;
    }
    required Submsg submsg_required = 51;
    optional Submsg submsg_optional = 52;
    repeated Submsg submsg_repeated = 53;

    required int64 i64_required = 101;
    optional int64 i64_optional = 102;
    repeated int64 i64_repeated = 103;
    required uint32 u32_required = 111;
    optional uint32 u32_optional = 112;
    repeated uint32 u32_repeated = 113;
    required uint64 u64_required = 121;
    optional uint64 u64_optional = 122;
    repeated uint64 u64_repeated = 123;
    required sint32 s32_required = 131;
    optional sint32 s32_optional = 132;
    repeated sint32 s32_repeated = 133;
    required sint64 s64_required = 141;
    optional sint64 s64_optional = 142;
    repeated sint64 s64_repeated = 143;
    required fixed32 fixed32_required = 151;
    optional fixed32 fixed32_optional = 152;
    repeated fixed32 fixed32_repeated = 153;
    required fixed64 fixed64_required = 161;
    optional fixed64 fixed64_optional = 162;
    repeated fixed64 fixed64_repeated = 163;
    required sfixed32 sfixed32_required = 171;
    optional sfixed32 sfixed32_optional = 172;
    repeated sfixed32 sfixed32_repeated = 173;
    required sfixed64 sfixed64_required = 181;
    optional sfixed64 sfixed64_optional = 182;
    repeated sfixed64 sfixed64_repeated = 183;
    required double f64_required = 191;
    optional double f64_optional = 192;
    repeated double f64_repeated = 193;
}

enum Enum {
    ZEROTH = 0;
    FIRST = 1;
    TENTH = 10;
}